{"version":3,"file":"static/js/445.e999fda7.chunk.js","mappings":"4JAEA,SAASA,IACL,OACI,qBAASC,UAAU,OAAnB,WACA,oDACJ,eAAGA,UAAU,kBAAb,0RAGA,2BACJ,oEAEA,6LAGA,gWAIA,ojBAMA,kSAGA,2KAEA,0EACA,qJAEA,6DAAmC,cAAGC,KAAK,0CAAR,+BACnC,+CACI,cAAGA,KAAK,sDAAR,gEADJ,mDAGA,4DAAkC,cAAGA,KAAK,wBAAR,4BAAlC,qLAGA,slBAMA,uYAIA,mKAEA,sbAIA,2JAEA,2GACA,cAAGA,KAAK,qCAAR,uBADA,QAEA,cAAGA,KAAK,wDAAR,oCAFA,kGAIA,4aAIA,2BAAI,cAAGA,KAAK,oDAAR,gEAAJ,4dAUC,CACc,SAASC,IACpB,OACI,gBAAKF,UAAU,sBAAf,UACI,SAACD,EAAD,KAGX,C","sources":["components/content/rust_blog/RustLearningPath.js"],"sourcesContent":["import './rust_learning_path.scss';\n\nfunction RustLearningPathText() {\n    return (\n        <section className=\"text\">\n        <h4>My Rust Learning Path.</h4>\n    <p className=\"text__paragraph\">Recently someone have asked me how I learn Rust. And since I like DRY and Ctrl-P Ctrl-V approach I\n    decided to write this article.  Please be advised: I’m not a Rust Guru or Senior Developer. I don’t\n    claim to know better. With this in mind let’s proceed:\n    <ol>\n<li>Learning Rust takes time. Be prepared.</li>\n\n<li>Albeit Rust took many things from other languages it implement it differently, refrain to compare.\nAt the end you learning Rust not writing a review Rust vs ..</li>\n\n<li>Rust is a high level language which takes different approach towards memory management. So if you do\nnot understand things like: Stack, Stack Frame, Heap, Pointer, memory Allocation, de-reference of Pointer,\nmemory Layout and Padding. Better learn about them. You don't need them immediately, but sooner or later\nyou will.</li> \n<li>Read The Book. Don't get upset if something is not clicking the first time. For me reading The Book\nwas a daunting task. And from time to time I still refresh some articles. I was so eager to start\ncoding so I skim some articles. The Book has a lot of goodness inside. But if you like my approach then;\nread The Book, Rust by Examples, Rust Reference, Rust API. Tinker with the code on play.rust-lang.org/,\nask questions on forum, read answers on stackoverflow. Repeat. Don't worry, you have to learn how to\ncrawl before you can walk.</li>\n<li>Understand traits. Traits are very important. At this point you better have knowledge of things\nfrom paragraph #3. And have seen, at least once, video from paragraph #10.Learn about standard traits:\nInto, From, Deref, Ord, Eq, PartialEq.. the more the merrier.</li>\n<li>Still feel unrest about raw pointers *const and *mut? What is Borrowing, Copy, Clone? What is\nreference in Rust and how it affects your life?</li>\n<li>Get used to Generics, type Alias, Lifetimes.</li>\n<li>What are smart  pointers, what is Pin? And what Cows are doing in Rust? Have you seen video from\nparagraph #10 already?</li>\n<li>Start to solve exercises from: <a href=\"https://github.com/rust-lang/rustlings/\">  Rustlings  </a></li>\n<li>Watch this video: \n    <a href=\"https://www.youtube.com/watch?v=rDoqT-a6UFg&t=1942s\">  Visualizing memory layout of Rust's data types  </a>\n    this video was my turning point. It's a Jem!</li>\n<li>Start solving exercises from: <a href=\"https://exercism.org/\"> Exercism.org </a> You’ll be glad to know that you can ask for help\nfrom mentors there. And if at some point you may think that something is wrong with the exercise,\nsimply know it isn't.</li>\n<li>By this point you must know about many things like: code organization, error handling, iterators,\ntrait system etc. I deliberately left asynchronous and multi threading it’s already a lot on the plate. \n14. Now you probably want to see more examples of the code, well there are usual places like  Rust by\nExamples, and even sometime Rust Reference. And you saw them already, I'm sure. There is more, for\nexample, on exercism.org it's possible to peak in other people's solution after you commit yours.\nSpoiler Alert! It could make you hate yourself. Please, don't.</li>\n<li>Since Rust is an opensource project I cloned many books to local repo and stated to edit them,\nmostly it's bottom page notes and addons, links to other material, sometime example. `mdbook` is very\nuseful crate. I love technology! Here came the time when I can write in the book and no one scolds me!\nI wonder what authors would tell if they see my mess, though.</li>\n<li>It's time to do something by yourself. I started by exploring web frameworks, Actix, Roket.\nStarted project, just to see how it goes.</li>\n<li>Take time and read sources for your dependencies. Github projects are my sources of examples. I have \nstarted from `itoa`. It didn't came to me, was too advance. Still afraid to look at it again. But it\ndefinitely worth to go to the dependency repository, have a look around, clone it, tinker with examples\nand tests, add one more star to the repository. And maybe it will be the right time for you to commit.</li>\n<li>Read sources for standard libraries. Use crates.io to find libraries and docs.rs to find and read\ndocumentation of libraries.</li>\n<li>Somewhere after paragraph #7, if not earlier, you probably started to look in\n<a href=\"https://doc.rust-lang.org/nomicon/\"> Nomicon </a> and \n<a href=\"https://rust-unofficial.github.io/patterns/intro.html\"> Rust Design Patterns </a> and numerous Cookbooks.\nThat is right, knowledge about Rust is scattered all over the web.</li>\n<li>Few words about macros. Remember school? There use to be  exercises with asterisk. In Rust first\ntime you will come across such exercise on page number six of The Book. To learn how to write macros\nsimply start with The Book and follow links. Again when I read sources for dependencies I look at\nthe code for macros and try to figure out what it does. Macros are useful and you will see them a lot.</li>\n<li><a href=\"https://github.com/rust-unofficial/too-many-lists\">\nLearning Rust With Entirely Too Many Linked Lists </a>. I dared to read it after a month of reading\n    The Book. On second chapter the author squeeze tears out of me, three months later I tried again and\n    this time followed to chapters with unsafe code, Miri and Rust Nightly where eventually get totally\n    lost again. While reading I have read lines where author has told that to write one of these chapters\n    it took here, if I remember correctly, eight!! years and it, actually, gave me some hope.\n    Recollect paragraph #1.</li>\n    </ol></p>\n        </section>\n    );\n}\nexport default function RustLearningPath(){\n    return (\n        <div className=\"main-content-holder\">\n            <RustLearningPathText/>\n        </div>\n    );\n}\n\n"],"names":["RustLearningPathText","className","href","RustLearningPath"],"sourceRoot":""}