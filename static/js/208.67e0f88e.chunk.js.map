{"version":3,"file":"static/js/208.67e0f88e.chunk.js","mappings":"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","sources":["components/content/tutorials/tic-tak-toe/Square.js","components/content/tutorials/tic-tak-toe/Board.js","components/content/tutorials/tic-tak-toe/TicTakToe.js"],"sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.props.onClick(this.props.index);\n  }\n  render() {\n      const class_name = this.props.showHistory ? \"game__board__square show-history\" : \"game__board__square\";\n    return (\n      <button\n        className={class_name}\n        onClick={this.handleClick}\n        style={{ color: this.props.squareStyle }}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\n// Square.PropTypes = {\n//   index: PropTypes.number,\n//   value: PropTypes.string,\n//   style: PropTypes.string,\n//   onClick: PropTypes.func\n// };\n","import Square from \"./Square\";\n\nexport default function Board(props) {\n  const renderSquare = (index) => {\n    const styled = props.styled;\n    let style = \"Black\";\n    if (styled.length > 0 && styled[index]) {\n      style = \"LightGrey\";\n    }\n\n    return (\n      <Square\n        index={index}\n        value={props.squares[index]}\n        onClick={props.onClick}\n        showHistory={props.showHistory}\n        squareStyle={style}\n      />\n    );\n  }\n\n    const class_name = props.showHistory ? \"game__board show-history \" : \"game__board\";\n    return (\n    <div className={class_name}>\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n      </div>\n    );\n}\n","import React from \"react\";\nimport Board from \"./Board\";\nimport \"./tic_tak_toe.scss\";\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nconst defaultState = {\n  history: [].concat([Array(9).fill(null)]),\n  xIsNext: true,\n  styled: Array(9).fill(null),\n  showHistory: false,\n};\n\nclass TicTakToe extends React.Component {\n  constructor() {\n    super();\n    this.state = defaultState;\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRestartButton = this.handleRestartButton.bind(this);\n    this.handleHistoryButton = this.handleHistoryButton.bind(this);\n    this.handleOnMouseOut = this.handleOnMouseOut.bind(this);\n    this.handleOnMouseOver = this.handleOnMouseOver.bind(this);\n      this.handleHistoryUpdates = this.handleHistoryUpdates.bind(this);\n  }\n\n\n  handleClick(i) {\n    const history = this.state.history;\n    const squares = history[history.length - 1].slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([squares]),\n      xIsNext: !this.state.xIsNext,\n      styled: []\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      xIsNext: step % 2,\n      history: this.state.history.slice(0, step)\n    });\n    this.handleHistoryUpdates();\n  }\n\n  handleHistoryButton() {\n    this.setState({\n      showHistory: !this.state.showHistory && this.state.history.length > 1\n    });\n  }\n // util method to handle when all history is cleaned, but history holder div is still on\n    // the screen.\n    handleHistoryUpdates(){\n        if(this.state.history.length === 2){\n            this.setState({\n                showHistory: false,\n            });\n        }\n    }\n\n  handleRestartButton() {\n    this.setState(defaultState);\n  }\n\n  handleOnMouseOver(move) {\n    const ind = this.state.styled;\n    const history = this.state.history;\n    const atPresent = history[history.length - 1];\n    const before = history[move - 1];\n    for (let i = 0; i < before.length; i++) {\n      if (atPresent[i] !== before[i]) {\n        ind[i] = 1;\n      }\n    }\n    if (ind.length > 0) {\n      this.setState({\n        styled: ind\n      });\n    }\n  }\n\n  handleOnMouseOut() {\n    this.setState({\n      styled: []\n    });\n  }\n  render() {\n    const history = this.state.history;\n    const round = history.length - 1;\n    const current = history[round];\n\n    const winner = calculateWinner(current);\n    const styledArray = this.state.styled;\n    const optionalText = <span className='text__optional'>move</span>;\n    let status = winner ? `Winer is:  ${winner}` : (round === 9) ? `Draw` : \n        <span>Next {optionalText}: {`${this.state.xIsNext ? \"X\" : \"O\"}`}</span>;\n\n\n      // history is array of nulls\n    const moves = history.map((step, move) => {\n        if (move) {\n            return (<button\n                key={step}\n                className=\"game__history__button\"\n                onClick={() => this.jumpTo(move)}\n                onMouseOver={() => this.handleOnMouseOver(move)}\n                onMouseOut={this.handleOnMouseOut}>\n              {`#${move} `}\n            </button>);\n      } else {\n      return null;\n      }\n    });\n\n\n    const game_status_class_name = this.state.showHistory ? \"game__status show-history\" : \"game__status\";\n    const game_class_name = this.state.showHistory ? \"game show-history\" : \"game\";\n    const history_button_text = this.state.showHistory ? \"Hide History\" : \"Show History\";\n\n    // change visibility of history bock on the fly with style\n    const gameHistoryStyle = {\n        display: this.state.showHistory ? 'block' : 'none',\n    }\n\n    return (\n      <div className={game_class_name}>\n        <div className={game_status_class_name}>\n\n            <p className=\"game__status__text\">{status}</p>\n            <button onClick={this.handleRestartButton}\n                className=\"game__status__button button_new\">\n              New Game\n            </button>\n\n            <button onClick={this.handleHistoryButton}\n                className=\"game__status__button button_show\">\n                {history_button_text}\n            </button>\n\n        </div>\n\n\n            <Board\n              squares={current}\n              onClick={this.handleClick}\n              showHistory = {this.state.showHistory}\n              styled={styledArray}\n            />\n\n        <div className=\"game__history\" style={gameHistoryStyle}>\n          {/*<span className=\"game__history__legend\">Game History:</span>*/}\n            <div className=\"game__history__list\">\n                {moves}\n            </div>\n        </div>\n\n      </div>\n    );\n  }\n}\nexport default TicTakToe;\n"],"names":["Square","props","handleClick","bind","this","onClick","index","class_name","showHistory","className","style","color","squareStyle","value","React","Board","renderSquare","styled","length","squares","calculateWinner","lines","i","a","b","c","defaultState","history","concat","Array","fill","xIsNext","TicTakToe","state","handleRestartButton","handleHistoryButton","handleOnMouseOut","handleOnMouseOver","handleHistoryUpdates","slice","setState","step","move","ind","atPresent","before","round","current","winner","styledArray","optionalText","status","moves","map","jumpTo","onMouseOver","onMouseOut","game_status_class_name","game_class_name","history_button_text","gameHistoryStyle","display"],"sourceRoot":""}