{"version":3,"file":"static/js/374.953ccda8.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/content/tutorials/todo/note/Note.jsx","components/content/tutorials/todo/notes_grid/NotesGrid.jsx","components/content/tutorials/todo/create_new_note/CreateNewNote.js","components/content/tutorials/todo/controllers/Controllers.js","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","components/content/tutorials/todo/lib/notes_db.js","components/content/tutorials/todo/Todo.js"],"sourcesContent":["import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, {useState} from \"react\";\nimport \"./Note.scss\";\n\nexport default function  Note(props) {\n    // props: object holding NoteObject, handling functions, delete, \n    // change status, edit, open to read. Might need lesteners again\n    // to close dropdow menu same as in navigation. Once clicked on\n    // dropdow shall close. Note header is dropdow button.\n    // const date = new Date();\n    // const offset = date.getTimezoneOffset();\n    const [showInfo, setShowInfo] = useState(false);\n    const [showMenu, setShowMenu] = useState(false);\n\n    const toggleInfo = ()=> setShowInfo(!showInfo);\n    const toggleMenu = ()=> setShowMenu(!showMenu);\n    const formatDateTime = (milliseconds) => {\n        const d = new Date(milliseconds);\n        let day = d.getDate();\n        day = day < 10 ? `0${day}` : day;\n        let month = d.getMonth();\n        month = month < 10 ? `0${month}` : month;\n        let year = d.getFullYear();\n        let hour = d.getHours();\n        hour = hour < 10 ? `0${hour}` : hour;\n        let minute = d.getMinutes();\n        minute = minute < 10 ? `0${minute}` : minute;\n        return `${day}.${month}.${year} ${hour}:${minute}`;\n    }\n\n    const noteInfoStyle = {\n        display: showInfo ? \"block\" : \"none\",\n    }\n    return (\n      <div className=\"Note\">\n        <div className=\"note__header\" onClick={toggleInfo}>\n        <span className=\"Note__title\">Title {props.note.title}</span>\n        <span className=\"Note__menu-button material-icons\" onClick={toggleMenu}>\n          more_vert\n        </span>\n        </div>\n        \n        <div className=\"note__info\" style={noteInfoStyle}>\n        <div className=\"Note__text\">Info {props.note.info}</div>\n            <div className=\"note__creation\">Created at: {formatDateTime(props.note.created)}\n            </div>\n            <details className=\"note__modified\"><summary>Modified at:</summary>\n            {props.note.modified.map((time, idx)=><span key={idx} className=\"note__modified-time\">\n                {formatDateTime(time)}\n            </span>)}\n            </details>\n        </div>\n      </div>\n    );\n}\n\n/*\n * Note must have a title, main text with information, two rows one for time of creation\n * one with dates of modification.\n * It shall have hidden buttons for edit(brings Note Component with loaded NoteObject),\n * delete. It must have a button to toggle status of note: done/active. Times when it\n * status is changing are times of modification too.\n * Note Object:\n * {\n *  id: Number,\n *  title: \"string\",\n *  info: string || null,\n *  status: default active || done,\n *  created: timestamp,\n *  modified: Array<timestamp>\n * }\n * */\n","import React from \"react\";\nimport Note from \"../note/Note.jsx\";\nimport \"./NotesGrid.scss\";\n\nexport default function NotesGrid({notes}) {\n    // when mounted must try to load notes from IndexDb\n    // \n\n    return (\n      <div className=\"NotesGrid\">\n          {notes.length > 0 ? notes.map(note => \n              <Note key={note.id} note={note}/>\n          ) : <div>No notes added yet, change this to something more informative.</div>}\n      </div>\n    );\n}\n","import './create_new_note.scss';\nimport React, {useState, useRef} from 'react';\n\n// toggleAddNew - toggles boolean flag in Todo for conditional rendering of elements\nexport default function CreateNewNote({toggleAddNew, sections, addNewSection}){\n\n\n    const newSectionInput = useRef();\n    const newSectionSelect = useRef();\n\n    // this is boolean for showing either select or input text for sections.\n    const [addSection, setAddSection] = useState(false);\n    // what section is active\n    const [defaultSectionIdx, setDefaultSectionIdx] = useState(0);\n    const [sectionInputValue, setSectionInputValue] = useState(\"All\");\n    const groupBtnText = addSection ? 'Save Group': 'New Group';\n    const groupLabelText =  addSection ? \"Add new Note's Group\": \"Select Note's Group\" ;\n\n    const handleGroupBtn = () => {\n        // add logic depending on the state save or toggle.\n        // when section added load new sections and set defaut value\n        if(!addSection){\n            // run when open section to add \n        } else {\n            // run while section is opened.\n            // console.log(`${newSectionInput.current.value}`);\n            if(sectionInputValue.length && sectionInputValue !== \"All\"){\n               addNewSection(sectionInputValue);\n                console.log(` called addNewSection in NewNote, value: ${sectionInputValue}`);\n            // setDefaultSectionIdx(2);\n            // search index of newly added section and set default.\n            } else {\n                setDefaultSectionIdx(0);\n\n            }\n        }\n        setAddSection(!addSection);    \n    }\n\n    const handleSaveBtn = () => {\n        // console.log(`${newSectionSelect.current.className}`);\n        if(newSectionSelect.current.value == \"All\"){\n            window.alert(\"Select Group or create new one.\")\n        }\n    }\n\n    const handleCancelAddGroup = () => {\n        setAddSection(false);\n        setDefaultSectionIdx(0);\n    }\n\n    const handleSectionInputChange = (e)=>{\n        setSectionInputValue(e.target.value);\n    }\n\n    const groupDivClass = addSection ? \"labeled-input note-group adding-group\" :\n        \"labeled-input note-group\";\n        // add key listener for enter on enter save new group\n    return (\n        <div className=\"create-new-note note-title\">\n    <div className=\"labeled-input\"> \n    <label htmlFor=\"titl\">Note Title</label>\n    <input className=\"create-new-note__title\" type=\"text\" placeholder=\"\" name=\"titl\"></input>\n    </div>\n\n    <div className={groupDivClass}> \n    <label htmlFor=\"sect\">{groupLabelText}</label>\n        {addSection ?\n        (\n            <>\n            <input\n            autoFocus={addSection}\n            ref={newSectionInput}\n            className=\"create-new-note__section\"\n            type=\"text\" placeholder=\"\" name=\"sect\"\n            onChange={handleSectionInputChange}></input>\n            <button type=\"button\" onClick={handleCancelAddGroup}>Cancel</button>\n            </>\n        ):\n        (<select\n            ref={newSectionSelect}\n            className=\"create-new-note__section\"\n            id=\"group-section\"\n            name=\"sect\" defaultValue={sections[defaultSectionIdx]}>\n            \n        {\n            sections.map((section, inx) => inx === 0 ?\n                <option key={inx} value={section}>{section}</option> :\n            <option  key={inx} value={section}>{section}</option>)\n        }\n    </select>)}\n    </div>\n\n    \n    <div className=\"labeled-input note-textarea\"> \n    <label htmlFor=\"note-area\">Note's Text</label>\n    <textarea\n        className=\"create-new-note__textarea\"\n        name=\"note-area\"\n        rows=\"4\"\n        maxLength=\"1000\"\n        wrap=\"hard\"\n        spellCheck=\"true\"\n        lang=\"en\">\n\n    </textarea>\n    </div>\n\n    <button\n        type=\"button\"\n        className=\"todo-btn new-btn\"\n        onClick={handleGroupBtn}\n        >{groupBtnText}</button>\n    <button type=\"button\" className=\"todo-btn save-btn\" onClick={handleSaveBtn}>Save Note</button>\n    <button type=\"button\" className=\"todo-btn cancel-btn\" onClick={toggleAddNew}>Cancel</button>\n        </div>\n    );\n}\n","import './Controllers.scss';\n// toggleAddNew - toggles boolean flag in Todo for conditional rendering of elements\nexport default function Controllers({toggleAddNew, sections}) {\n    const search_options = [\n        \"Text\",\n        \"Exact creation date\",\n        \"All created before\",\n        \"All created after\",\n        \"Exact editing date\",\n        \"All edited before\",\n        \"All edited after\",\n\n    ];\n    const searchType = \"text\" || \"date\";\nreturn (\n<form className=\"controllers\">\n    <div className=\"labeled-input search-holder\"> \n    <label htmlFor=\"srch\">Search Notes</label>\n    <input className=\"search-input\" type={searchType} placeholder=\"\" name=\"srch\"></input>\n    </div>\n\n    <div className=\"labeled-input section-holder\"> \n    <label htmlFor=\"sct\">Select Note's Group</label>\n    <select className=\"section-input\" name=\"sct\" defaultValue={sections[0]}>\n        {\n            sections.map((section, inx) => inx === 0 ?\n                <option key={inx} value={section}>{section}</option> :\n            <option  key={inx} value={section}>{section}</option>)\n        }\n    </select>\n    </div>\n\n    <div className=\"labeled-input search-options-holder\"> \n    <label htmlFor=\"search-options\">Search By:</label>\n    <select className=\"search-options-input\" defaultValue={search_options[0]}>\n        {\n            search_options.map((opt, inx) => inx === 0 ?\n                <option key={inx} value={opt}>{opt}</option> :\n            <option  key={inx} value={opt}>{opt}</option>)\n        }\n    </select>\n    </div>\n\n    <div className=\"button-holder\">\n    <button type=\"button\" className=\"todo-btn\">Reset</button>\n    <button type=\"button\" className=\"todo-btn\" onClick={toggleAddNew}>Add Note</button>\n    </div>\n</form>\n);\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import {openDB} from 'idb';\nconst DB_NAME = \"todo_notes_db\";\n// :wconst DB_SECTIONS_TABLE = \"todo_notes_sections\";\nlet db = null;\n\n// get database\n// get transaction\n// get cursor\n\n\n// get all notes\n// get delete one note\n// upgrade one note\n\n// get all by something.\n// sort all by something\n// default sorting is by id\n// add new table / section\n// get all from section\n// find somethinng in section\n/*'\n note = {\n    id: 0,\n    text: '',\n    createdAt: Number,\n    modified: Array<Number>(),\n    active: true,\n }\n    */\n\n// Must have special table sections where all sections are saved\n// get all sections sorted by creation time\n// When db opened for the first time it must create section all 'All'\n// when section all is chosen get all notes method shall return sum of all\n// arrays from methods get all from section and sort result by date, most\n// recent first.\n\n\n// add section.\n// Need window to manage all sections. Add / Delete, Rename (objectStore.put).\n// This is inner API changes global db.\n// async function getDb() {\n//     console.log(` get db is called`);\n//     if (db) {\n//         console.log(` db is not null`);\n//         return db;\n//     } else {\n//         console.log(` db is null in get db`);\n//         const openRequest = window.indexedDB.open(DB_NAME);\n//         openRequest.addEventListener('error', () => {\n//             console.error('Database failed to open')\n//             throw new Error(`Error during opening ${DB_NAME}`);\n//         });\n//         openRequest.addEventListener('success', () => {\n//             const db = openRequest.result;\n//             return db;\n//         });\n//         openRequest.onupgradeneeded = (event) => {\n//             const db = openRequest.result;\n//             const tables = db.objectStoreNames;\n//             console.log(` upgrade event is happened version: ${db.version}`);\n//             // TODO: Must return new db? Call recursive.\n//             // all updates are going to happen in table create update db function.\n//             if (tables.length == 0) {return} \n//             console.log(`On upgrade needed is called while simple getDb.`);}\n//     }\n// }\n// \n// change database use upgrade callback to run in upgradeneeded event.\n// This is inner API changes global db.\nasync function upgradeDb(upgrade) {\n\n    const version = await getVersion();\n    console.log(` got to version: ${version}`);\n\n    // re-open db to with new version to trigger upgrade\n    const openUpgradeRequest = window.indexedDB.open(DB_NAME, version);\n    console.log(`openUpgradeRequest ${openUpgradeRequest.readyState}`);\n\n    openUpgradeRequest.addEventListener('upgradeneeded', async (e) => {\n\n        const db = e.target.result;\n        console.log(` run upgradeneeded, db.version:  ${db.version}`);\n        await upgrade(db);\n        return db;\n    }\n\n    );\n\n    openUpgradeRequest.addEventListener('error', () => {\n        throw new Error(`Error during opening ${DB_NAME}`);\n    });\n\n    openUpgradeRequest.addEventListener('success', () => {\n        return openUpgradeRequest.result;\n    });\n}\n\n\nasync function getVersion(){\n    // open db\n    let res = 0;\n    try{\n    const db = await openDB(DB_NAME);\n    res = db.version;\n    } catch (e) {\n        throw new Error(`Error while getting current version. Error: ${e}`)\n    }\n    return res;\n        // get version or db\n    // promise\n    //return new Promise((resolve) => {\n    //const openRequest = window.indexedDB.open(DB_NAME);\n    //// not sure if event is available onerror.\n    //openRequest.onerorr = (event) => {throw new Error(`Error while current version.`) };\n    //openRequest.onsuccess = (event) => {\n    //const db = openRequest.result;\n    //let version = db.version;\n    //version = (version === undefined || version === '') ? 0 : version + 1;\n    //    // console.log(` version in getVersion: ${version}`);\n    //resolve(version);\n    //};\n    //openRequest.onupgradeneeded = (event) => {\n    //    throw new Error(`Error getting version, onupgradeneeded has been called.`);};\n\n    //})}\n    }\n\n\n// add new table - objectStore to IdB\n// this method is inner API it's going to be called from inside wrapper funictions.\nexport async function addNewTable(name) {\n    let version = 0;\n    try{\n    const db = await openDB(DB_NAME);\n    version = db.version;\n    } catch (e) {\n        throw new Error(`Error while getting current version. Error: ${e}`)\n    }\n\n    if (version == 0) {\n        throw new Error(`IndexedDb version error. It can not be ${version}`);\n    }\n    const new_version = version + 1;\n    \n        \n\n\n\n    const newDb = await upgradeDb(async (cdb) => {\n        let objectStore;\n        try {\n    objectStore = await cdb.createObjectStore(name,\n    { keyPath: 'id', autoIncrement:true });\n            console.log(`tried to create objectStore to add new section`);\n        } catch (err) {\n            // catch the same name error.\n            if (err.message.toLowerCase().includes(`object store`)\n                && err.message.includes(`already exists`)){\n                alert(`Group name '${name}' is already in use.`);\n                return;\n            } else {\n                console.error(`Error updateDb: ${err.message}`);\n            }\n        }\n        // TODO:When error is caught app returns to the state as if it was success.\n    \n\n        if(objectStore) {\n    objectStore.createIndex('text', 'text', { unique: false }); // main tex of note\n            console.log(` index text done`);\n    objectStore.createIndex('created', 'created', { unique: false }); // timestamp\n            console.log(` index created done`);\n    objectStore.createIndex('modified', 'modified', { unique: false }); // Array<timestamp>\n            console.log(` index modified done`);\n    objectStore.createIndex('active', 'active', { unique: false }); // boolean\n            console.log(` index active done`);\n     } else {\n        console.log(`object Store is not ready yet.`);\n    }\n\n    });\n    if (newDb) {\n    console.log(` this must to be printed after all indexes`);\n        console.log(` sections: ${newDb.objectStoreNames}`);\n    db = newDb;\n    }\n    // return newDb;\n}\n\n// may be easyer solution is to add devault value each time  objectStoreNames are returning.\n// add default section All.\n// async function addDefaultSection(){}\n\n\n// Api\n\n// return list of objectStore / tables of Db.\nexport async function getTables(){\n    const res = [];\n    const db = await openDB(DB_NAME);\n    if (db) {\n    const tables = db.objectStoreNames;\n    res.push(...tables);\n}\n    return res;\n}\n\nexport async function getAllFromTable(table) {\n    const res = [];\n    const db = await openDB(DB_NAME);\n  const transaction = db.transaction([table], 'readwrite');\n  const objectStore = transaction.objectStore(table);\n  const cursor = objectStore.openCursor();\n    cursor.onsuccess = (event) => {\n        // local cursor \n    const cursor = event.target.result;\n\n    while (cursor) {\n        const note = {\n            text: cursor.value.text || '',\n            created: cursor.value.created || 0,\n            modified: cursor.value.modified || [],\n            active: cursor.value.active || true,\n        };\n        res.push(note);\n        cursor.continue();\n    }\n        return res;\n    };\n\n    cursor.onerror = (event) => {throw new Error(`Cursor error. Can not get notes. `)};\n}\n\n\nexport async function getAllNotes(){\n    const res = [];\n    const db = await openDB(DB_NAME);\n    if (db) {\n    const tables = db.objectStoreNames;\n    for (const table of tables) {\n        const notes = getAllFromTable(table);\n        res.push(notes);\n    }\n}\n// there were plans to sort this result. for now return as it's.\n    return res;\n}\n\n// add one note to specific section.\n// note argument is object holding section and text values.\nexport async function addNote(note){\n    const newNote = {\n    text: note.text,\n    createdAt: Date.now(),\n    modified: [],\n    active: true,\n    }\n\n    const db = await openDB(DB_NAME);\n    const transaction = db.transaction([note.section], 'readwrite');\n    const objectStore = transaction.objectStore(note.section);\n    const addRequest = objectStore.add(newNote);\n\n    addRequest.addEventListener('success', () => {\n        return true;\n    });\n\n    transaction.addEventListener('complete', () => {\n    console.log('Transaction completed: new note added.');\n    });\n\n    transaction.addEventListener('error', () => {\n        console.log('Transaction not opened due to error');\n        throw new Error(\"Error adding new note\");\n    });\n}\n\n// get transaction\n// get cursor\n\n\n// get all notes\n// get delete one note\n// upgrade one note\n\n// get all by something.\n// sort all by something\n// default sorting is by id\n// add new table / section\n// get all from section\n// find somethinng in section\n\n// Define the addData() function form on submit handler.\n/*\nfunction addData(e) {\n  // prevent default - we don't want the form to submit in the conventional way\n  e.preventDefault();\n\n  // grab the values entered int  the form fields and store them in an object ready for being inserted into the DB\n  const newItem = { title: titleInput.value, body: bodyInput.value };\n\n  // open a read/write db transaction, ready for adding the data\n  const transaction = db.transaction(['notes_os'], 'readwrite');\n\n  // call an object store that's already been added to the database\n  const objectStore = transaction.objectStore('notes_os');\n\n  // Make a request to add our newItem object to the object store\n  const addRequest = objectStore.add(newItem);\n\n  addRequest.addEventListener('success', () => {\n    // Clear the form, ready for adding the next entry\n    titleInput.value = '';\n    bodyInput.value = '';\n  });\n\n  // Report on the success of the transaction completing, when everything is done\n  transaction.addEventListener('complete', () => {\n    console.log('Transaction completed: database modification finished.');\n\n    // update the display of data to show the newly added item, by running displayData() again.\n    displayData();\n  });\n\n  transaction.addEventListener('error', () => console.log('Transaction not opened due to error'));\n}\n\n// Define the displayData() function\nfunction displayData() {\n  // Here we empty the contents of the list element each time the display is updated\n  // If you didn't do this, you'd get duplicates listed each time a new note is added\n  while (list.firstChild) {\n    list.removeChild(list.firstChild);\n  }\n\n  // Open our object store and then get a cursor - which iterates through all the\n  // different data items in the store\n  const objectStore = db.transaction('notes_os').objectStore('notes_os');\n  objectStore.openCursor().addEventListener('success', (e) => {\n    // Get a reference to the cursor\n    const cursor = e.target.result;\n\n    // If there is still another data item to iterate through, keep running this code\n    if (cursor) {\n      // Create a list item, h3, and p to put each data item inside when displaying it\n      // structure the HTML fragment, and append it inside the list\n      const listItem = document.createElement('li');\n      const h3 = document.createElement('h3');\n      const para = document.createElement('p');\n\n      listItem.appendChild(h3);\n      listItem.appendChild(para);\n      list.appendChild(listItem);\n\n      // Put the data from the cursor inside the h3 and para\n      h3.textContent = cursor.value.title;\n      para.textContent = cursor.value.body;\n\n      // Store the ID of the data item inside an attribute on the listItem, so we know\n      // which item it corresponds to. This will be useful later when we want to delete items\n      listItem.setAttribute('data-note-id', cursor.value.id);\n\n      // Create a button and place it inside each listItem\n      const deleteBtn = document.createElement('button');\n      listItem.appendChild(deleteBtn);\n      deleteBtn.textContent = 'Delete';\n\n      // Set an event handler so that when the button is clicked, the deleteItem()\n      // function is run\n      deleteBtn.addEventListener('click', deleteItem);\n\n      // Iterate to the next item in the cursor\n      cursor.continue();\n    } else {\n      // Again, if list item is empty, display a 'No notes stored' message\n      if (!list.firstChild) {\n        const listItem = document.createElement('li');\n        listItem.textContent = 'No notes stored.'\n        list.appendChild(listItem);\n      }\n      // if there are no more cursor items to iterate through, say so\n      console.log('Notes all displayed');\n    }\n  });\n}\n\n// Define the deleteItem() function\nfunction deleteItem(e) {\n  // retrieve the name of the task we want to delete. We need\n  // to convert it to a number before trying to use it with IDB; IDB key\n  // values are type-sensitive.\n  const noteId = Number(e.target.parentNode.getAttribute('data-note-id'));\n\n  // open a database transaction and delete the task, finding it using the id we retrieved above\n  const transaction = db.transaction(['notes_os'], 'readwrite');\n  const objectStore = transaction.objectStore('notes_os');\n  const deleteRequest = objectStore.delete(noteId);\n\n  // report that the data item has been deleted\n  transaction.addEventListener('complete', () => {\n    // delete the parent of the button\n    // which is the list item, so it is no longer displayed\n    e.target.parentNode.parentNode.removeChild(e.target.parentNode);\n    console.log(`Note ${noteId} deleted.`);\n\n    // Again, if list item is empty, display a 'No notes stored' message\n    if (!list.firstChild) {\n      const listItem = document.createElement('li');\n      listItem.textContent = 'No notes stored.';\n      list.appendChild(listItem);\n    }\n  });\n}\n*/\n\n\n","import React, {useState, useEffect, useCallback} from \"react\";\n\n\nimport NotesGrid from \"./notes_grid/NotesGrid\";\nimport UsageInfo from \"./usage_info/UsageInfo\";\nimport CreateNewNote from \"./create_new_note/CreateNewNote\";\nimport Controllers from \"./controllers/Controllers\";\nimport {addNewTable, getTables, getAllNotes, addNote} from \"./lib/notes_db\";\nimport \"./Todo.scss\";\n\n// in the place of Notes grid can be any of controllers UsageInfo, ErrorMessage, CreateNewNote.\n// the conditional and are comming from user interaction or from error connecting to db.\n//\n    // <NotesGrid /> <UsageInfo />\n\n// Need special module with all db related opearations\n// Need special module with all array searching and sorting operations.\n// Need property to store notes.\nconst Todo = () => {\n    // boolean flag for conditional rendering of elements.\n    const [addNew, setAddNew] = useState(false);\n    // TEST NOTES\n    const [notes, setNotes] = useState([]);\n    const [sections, setSections] = useState([]);\n    const [activeSection, setActiveSection] = useState(\"All\");\n    // END TEST NOTESJK\n    const [db, setDb] = useState(null);\n    const toggleAddNew = () => {\n        setAddNew(!addNew);\n    }\n    \n\n\n\n// Db handlers. Don't forget they all are async functions!\n// https://devtrium.com/posts/async-functions-useeffect\n\n    // add new secton to dropdown and create new table in db.\n    const handleAddNewTable = async(table) => {\n        // add table\n        // console.log(` Adding table: ${table}`);\n        await addNewTable(table);\n        await handleGetTables();\n    }\n    // used to display sections on select dropdown.\n    // TODO do not forget to Add default \"All\".\n\n    const handleGetTables = async() => {\n        const res = [\"All\"];\n        const tables = await getTables();\n        if (tables.length > 0) {\n            res.push(...tables);\n        }\n        setSections(res);\n    }\n    // get all notes from db.\n    const handleGetAllNotes = async() => {\n        // check what section is active\n        // get all notes from that section\n        // if no active section All get all\n        // set state\n    }\n    const handleAddNote = async(note) => {\n        // add note\n        // get all notes\n        // set state\n    }\n\n\n// Effects and states used to change state of the component.\n    // I need to get tables and notes when started\n    // TODO need handler to set active section.\nconst fetchNotes = useCallback(async () => {\n  const notes = await getAllNotes();\n  setNotes(notes);\n}, [])\n\n// the useEffect is only there to call `fetchData` at the right time\n    // TODO console.error is beautiful, but maybe may do something better\nuseEffect(() => {\n  fetchNotes()\n    .catch(console.error);\n}, [fetchNotes])\n\nconst fetchSections = useCallback(async () => {\n    // I have a ready solution here in the component.\n  await handleGetTables();\n}, [])\n\n// the useEffect is only there to call `fetchData` at the right time\nuseEffect(() => {\n  fetchSections()\n    .catch(console.error);\n}, [fetchSections])\n\n\n\n\n\n\n\n\n    return (\n  <div className=\"App\">\n        {/*<h2 className=\"App__header\">Todo List</h2>*/}\n        {\n        addNew ? <CreateNewNote \n                toggleAddNew={toggleAddNew}\n                addNewNote={handleAddNote}\n                addNewSection={handleAddNewTable}\n                sections={sections} /> :\n\n                <Controllers toggleAddNew={toggleAddNew} sections={sections} />\n        }\n        {!addNew && <NotesGrid  notes={notes}/>}\n    \n    \n    { /*<NoteEditorContainer />\n    <NotesGridContainer />*/ }\n  </div>\n);}\nexport default Todo;\n/*\n * Todo list must have sections / themes (work, shop, note, etc). It must have top section\n * with controlls. Controlls: CRUD for notes, search and filter and sort, must have\n * selection for sections. Must have controlls to add sections.\n * Then todo must have a table of rows with notes.\n *\n * Note must have: indication is it active,\n * expired, done. Must have main text, date it was created, and array of date and times\n * when it was edited. Must have some title?\n *\n * Will need redux state holder for whole component. \n * By default search will search in all sections by text. If some specific section is selected\n * it will search only this section. Will need options to set search input box behavior\n * [exact date, less than date (including), older than date (including)], dates are: date\n * creation, date of editing. Direction of sorting: asc, desc. All controls must have\n * default settings. Must have reset to default button. What if I will bring all this to drop\n * down menu?\n * When app is droped down it shall search for all sections and dispalay 10 last created\n * if no there is no notes it shall show small intro how to use app.\n * If there is a misstace or any problem with connecting to IndexedDb it shall show \n * message to user that this functionality is unavailable.\n * Info\n * Error\n * Create New components.\n * */\n\n\n/*\n    [\n {\n  id: 1,\n  title: \"First note\",\n  info: \"long bla bla \",\n  status: \"active\",\n  created: 1660283981430,\n  modified: [1662283981430, 1662283981430,1662283981430,1662283981430]\n },\n {\n  id: 2,\n  title: \"Nice title for nice note\",\n  info: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n  status: \"active\",\n  created: 1660283981430,\n  modified: [1662283981430, 1662283981430,1662283981430,1662283981430]\n },\n {\n  id: 3,\n  title: \"Do it.\",\n  info: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n  status: \"active\",\n  created: 1660283981430,\n  modified: [1662283981430, 1662283981430,1662283981430,1662283981430]\n },\n {\n  id: 4,\n  title: \"Out of ideas for titles.\",\n  info: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n  status: \"active\",\n  created: 1660283981430,\n  modified: [1662283981430, 1662283981430,1662283981430,1662283981430, 1662283981430, 1662283981430,1662283981430,1662283981430, 1662283981430, 1662283981430,1662283981430,1662283981430]\n },\n    ]\n    */\n"],"names":["exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply","Note","props","useState","showInfo","setShowInfo","showMenu","setShowMenu","formatDateTime","milliseconds","d","Date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","noteInfoStyle","display","className","onClick","note","title","style","created","modified","map","time","idx","NotesGrid","notes","id","CreateNewNote","toggleAddNew","sections","addNewSection","newSectionInput","useRef","newSectionSelect","addSection","setAddSection","defaultSectionIdx","setDefaultSectionIdx","sectionInputValue","setSectionInputValue","groupBtnText","groupLabelText","groupDivClass","htmlFor","placeholder","autoFocus","ref","onChange","e","target","defaultValue","section","inx","rows","maxLength","spellCheck","lang","console","log","current","window","alert","Controllers","search_options","opt","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","get","prop","receiver","IDBTransaction","objectStoreNames","objectStore","set","has","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","includes","unwrap","storeNames","tx","sort","transformCachableValue","unlisten","removeEventListener","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","some","c","Proxy","IDBRequest","request","promise","success","catch","promisifyRequest","newValue","openDB","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","storeName","store","index","shift","all","oldTraps","callback","DB_NAME","upgradeDb","getVersion","openUpgradeRequest","readyState","res","addNewTable","cdb","createObjectStore","keyPath","autoIncrement","message","toLowerCase","createIndex","unique","newDb","getTables","tables","getAllFromTable","table","cursor","openCursor","onsuccess","text","active","onerror","getAllNotes","addNew","setAddNew","setNotes","setSections","handleAddNewTable","handleGetTables","handleAddNote","fetchNotes","useCallback","useEffect","fetchSections","addNewNote"],"sourceRoot":""}